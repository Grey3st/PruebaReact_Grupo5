{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msal0\\\\Desktop\\\\FdPW\\\\PruebaReact\\\\pruebareact01\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notas, setNotas] = useState([]);\n  const [nuevaNota, setNuevaNota] = useState('');\n  //Con esta constante solo permitimos que entren las cotas con condición \"true\". Si cambia a false, no deja ingresar las notas\n  const [condicionNota, setCondicionNota] = useState(Boolean);\n  const agregarNota = () => {\n    if (nuevaNota !== '' && condicionNota == true) {\n      setNotas([...notas, nuevaNota]);\n      setNuevaNota('');\n      setCondicionNota(true);\n    }\n  };\n  const eliminarNota = index => {\n    const nuevaNotas = [...notas];\n    nuevaNotas.splice(index, 1);\n    setNotas(nuevaNotas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Notas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nueva Nota\",\n      value: nuevaNota,\n      onChange: e => setNuevaNota(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: agregarNota,\n      children: \"Agregar Nota\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notas.map((nota, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./img/disparo.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this), nota, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => eliminarNota(index),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setCondicionNota(false),\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"f44VmJMD2wTuC57KFyZBn79+RPA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notas","setNotas","nuevaNota","setNuevaNota","condicionNota","setCondicionNota","Boolean","agregarNota","eliminarNota","index","nuevaNotas","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","nota","src","_c","$RefreshReg$"],"sources":["C:/Users/msal0/Desktop/FdPW/PruebaReact/pruebareact01/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\r\n\r\nfunction App() {\r\nconst [notas, setNotas]=useState([]);\r\nconst [nuevaNota, setNuevaNota]=useState('');\r\n//Con esta constante solo permitimos que entren las cotas con condición \"true\". Si cambia a false, no deja ingresar las notas\r\nconst [condicionNota, setCondicionNota]=useState(Boolean);\r\nconst agregarNota=()=>{\r\n  if (nuevaNota!=='' && condicionNota==true) {\r\n    setNotas([...notas, nuevaNota]);\r\n    setNuevaNota('');\r\n    setCondicionNota(true);\r\n  }\r\n};\r\nconst eliminarNota=(index)=>{\r\n  const nuevaNotas=[...notas];\r\n  nuevaNotas.splice(index,1);\r\n  setNotas(nuevaNotas);\r\n}\r\nreturn (<div>\r\n  <h1>Lista de Notas</h1>\r\n  <input type='text' placeholder='Nueva Nota' value={nuevaNota} onChange={(e)=>setNuevaNota(e.target.value)}></input>\r\n  <button onClick={agregarNota}>Agregar Nota</button>\r\n  <ul>{notas.map((nota,index)=>(\r\n    <li key={index}>\r\n      <img src='./img/disparo.png'></img>\r\n      {nota}\r\n      <button onClick={()=>eliminarNota(index)}>Eliminar</button>\r\n      <button onClick={setCondicionNota(false)}>False</button>\r\n    </li>\r\n  ))}</ul>\r\n</div>);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAACV,QAAQ,CAACW,OAAO,CAAC;EACzD,MAAMC,WAAW,GAACA,CAAA,KAAI;IACpB,IAAIL,SAAS,KAAG,EAAE,IAAIE,aAAa,IAAE,IAAI,EAAE;MACzCH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,SAAS,CAAC,CAAC;MAC/BC,YAAY,CAAC,EAAE,CAAC;MAChBE,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EACD,MAAMG,YAAY,GAAEC,KAAK,IAAG;IAC1B,MAAMC,UAAU,GAAC,CAAC,GAAGV,KAAK,CAAC;IAC3BU,UAAU,CAACC,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;IAC1BR,QAAQ,CAACS,UAAU,CAAC;EACtB,CAAC;EACD,oBAAQb,OAAA;IAAAe,QAAA,gBACNf,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,YAAY;MAACC,KAAK,EAAEjB,SAAU;MAACkB,QAAQ,EAAGC,CAAC,IAAGlB,YAAY,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnHnB,OAAA;MAAQ0B,OAAO,EAAEhB,WAAY;MAAAK,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDnB,OAAA;MAAAe,QAAA,EAAKZ,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAChB,KAAK,kBACxBZ,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAK6B,GAAG,EAAC;QAAmB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAClCS,IAAI,eACL5B,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAIf,YAAY,CAACC,KAAK,CAAE;UAAAG,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DnB,OAAA;UAAQ0B,OAAO,EAAElB,gBAAgB,CAAC,KAAK,CAAE;UAAAO,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAJjDP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACN;AAACjB,EAAA,CA9BQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}